package fullName;

import com.koresframework.kores.test.InvocationsTest_;
import com.koresframework.kores.test.Greeter;
import com.koresframework.kores.test.WorldGreeter;
import java.util.function.Supplier;

public class InvocationsTest__Generated {

    public final String FIELD = "AVD";
    public final int n = 15;

    public InvocationsTest__Generated() {
        System.out.println("Hello");
        this.printIt("Oi");
    }

    public void printIt(Object n) {
        if (n != null) {
            System.out.println("Hello :D");
        }
        String dingdong = "DingDong";
        System.out.println(dingdong);
        System.out.println(n);
    }

    public boolean check(int x) {
        InvocationsTest_.bmp("xy", "yz");
        System.out.println("Invoke Interface ->");
        Greeter greeter = new WorldGreeter();
        String greetingVar = greeter.hello();
        System.out.println(greetingVar);
        System.out.println("Invoke Interface <-");
        System.out.println("Invoke Dynamic ->");
        Supplier supplier2 = () -> "BRB";
        System.out.println((String)supplier2.get());
        Supplier supplier = greeter::hello;
        String str = (String)supplier.get();
        System.out.println(str);
        System.out.println("Invoke Dynamic <-");
        System.out.println("Invoke Dynamic Bootstrap ->");
        // Unsupported: InvokeDynamic(bootstrap=MethodInvokeSpec(invokeType=INVOKE_STATIC, methodTypeSpec=MethodTypeSpec(localization=JavaType[Lcom/github/jonathanxd/kores/test/InvocationsTest_;], methodName=myBootstrap, typeSpec=TypeSpec(returnType=class java.lang.invoke.CallSite, parameterTypes=[class java.lang.invoke.MethodHandles$Lookup, class java.lang.String, class java.lang.invoke.MethodType, class [Ljava.lang.Object;]))), dynamicMethod=DynamicMethodSpec(name=helloWorld, typeSpec=TypeSpec(returnType=PredefinedType[V], parameterTypes=[PredefinedType[Ljava/lang/String;]]), arguments=[StringLiteral[name="World", type=JavaType[Ljava/lang/String;]]]), bootstrapArgs=[]);
        System.out.println("Invoke Dynamic Bootstrap <-");
        if (x == 9 || x == 7) {
            return 0;
        }
        System.out.println(x);
        return 1;
    }
}
